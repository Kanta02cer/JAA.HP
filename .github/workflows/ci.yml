name: JAA.HP CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  schedule:
    # 毎日朝5時（JST）に実行
    - cron: '20 20 * * *'

env:
  SITE_URL: ${{ secrets.SITE_URL || 'https://kanta02cer.github.io/JAA.HP' }}
  ARTICLE_ID: ${{ secrets.ARTICLE_ID || '' }}

jobs:
  # E2Eテスト（Playwright）
  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Install Playwright browsers
        run: npx playwright install --with-deps
        
      - name: Run E2E tests
        run: |
          # 基本ニュース機能テスト
          npx playwright test tests/e2e/news.spec.ts \
            --reporter=html \
            --project=chromium \
            --timeout=30000
          
          # 追加テストスイート（セキュリティ、アクセシビリティ、負荷）
          npx playwright test tests/e2e/security.spec.ts tests/e2e/accessibility.spec.ts tests/e2e/load.spec.ts \
            --reporter=html \
            --project=chromium \
            --timeout=30000
        env:
          SITE_URL: ${{ env.SITE_URL }}
          ARTICLE_ID: ${{ env.ARTICLE_ID }}
          
      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  # APIテスト（Newman）
  api-tests:
    name: API Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install Newman
        run: npm install -g newman
        
      - name: Run API tests
        run: |
          newman run tests/api/jaa.postman_collection.json \
            --reporters cli,json \
            --reporter-json-export newman-report.json
        env:
          API_BASE_URL: ${{ secrets.API_BASE_URL || 'https://asia-northeast1-jaa-hp.cloudfunctions.net' }}
          SITE_URL: ${{ env.SITE_URL }}
          TEST_ARTICLE_ID: ${{ env.ARTICLE_ID }}
          
      - name: Upload Newman report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: newman-report
          path: newman-report.json
          retention-days: 30

  # パフォーマンステスト（Lighthouse CI）
  lighthouse:
    name: Lighthouse CI
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install Lighthouse CI
        run: npm install -g @lhci/cli
        
      - name: Run Lighthouse CI
        run: |
          lhci autorun \
            --config=./lighthouserc.json \
            --urls="${{ env.SITE_URL }}/news.html,${{ env.SITE_URL }}/news-detail.html" \
            --upload.target=temporary-public-storage
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

  # セキュリティスキャン
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Run OWASP ZAP scan
        uses: zaproxy/action-full-scan@v0.8.0
        with:
          target: ${{ env.SITE_URL }}
          rules_file_name: .zap/rules.tsv
          cmd_options: '-a'

  # 品質チェック
  quality-check:
    name: Quality Check
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run ESLint
        run: npm run lint
        
      - name: Run Prettier check
        run: npm run format:check
        
      - name: Check bundle size
        run: npm run build:analyze

  # 通知
  notify:
    name: Notify Results
    runs-on: ubuntu-latest
    needs: [e2e-tests, api-tests, lighthouse, security-scan, quality-check]
    if: always()
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Generate summary report
        run: |
          node scripts/generate-report.js
          
      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('ci-report.md', 'utf8');
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: report
            });

  # デプロイ（本番環境への自動デプロイ）
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [e2e-tests, api-tests, lighthouse, security-scan, quality-check]
    if: github.ref == 'refs/heads/main' && needs.e2e-tests.result == 'success'
    timeout-minutes: 20
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build project
        run: npm run build
        
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          force_orphan: true
          
      - name: Deploy to Firebase (if configured)
        if: ${{ env.FIREBASE_SERVICE_ACCOUNT != '' }}
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          projectId: jaa-hp
          channelId: live
