{
  "info": {
    "name": "JAA.HP API Tests",
    "description": "JAA.HPのニュース機能APIテストコレクション",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0"
  },
  "variable": [
    {
      "key": "API_BASE_URL",
      "value": "https://asia-northeast1-jaa-hp.cloudfunctions.net",
      "type": "string",
      "description": "Firebase FunctionsのベースURL"
    },
    {
      "key": "SITE_URL",
      "value": "https://kanta02cer.github.io/JAA.HP",
      "type": "string",
      "description": "JAA.HPのサイトURL"
    },
    {
      "key": "TEST_ARTICLE_ID",
      "value": "",
      "type": "string",
      "description": "テスト用の記事ID（テスト実行時に設定）"
    }
  ],
  "auth": {
    "type": "noauth"
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// テスト実行前の共通処理",
          "console.log('APIテスト開始:', pm.request.url);"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// 共通テスト処理",
          "pm.test('ステータスコードが200である', function () {",
          "    pm.response.to.have.status(200);",
          "});",
          "",
          "pm.test('レスポンス時間が5秒以内である', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(5000);",
          "});",
          "",
          "pm.test('Content-Typeが適切である', function () {",
          "    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
          "});"
        ]
      }
    }
  ],
  "item": [
    {
      "name": "Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{API_BASE_URL}}/health",
          "host": ["{{API_BASE_URL}}"],
          "path": ["health"]
        },
        "description": "APIの健全性チェック"
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test('ヘルスチェックが成功する', function () {",
              "    pm.response.to.have.status(200);",
              "    const response = pm.response.json();",
              "    pm.expect(response.status).to.eql('ok');",
              "    pm.expect(response.timestamp).to.be.a('string');",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Get News List",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{API_BASE_URL}}/news?limit=10",
          "host": ["{{API_BASE_URL}}"],
          "path": ["news"],
          "query": [
            {
              "key": "limit",
              "value": "10",
              "description": "取得件数制限"
            }
          ]
        },
        "description": "ニュース一覧の取得"
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test('ニュース一覧が正常に取得される', function () {",
              "    pm.response.to.have.status(200);",
              "    const response = pm.response.json();",
              "    pm.expect(response).to.be.an('object');",
              "    pm.expect(response.articles).to.be.an('array');",
              "    pm.expect(response.articles.length).to.be.at.most(10);",
              "});",
              "",
              "pm.test('記事データの構造が正しい', function () {",
              "    const response = pm.response.json();",
              "    if (response.articles && response.articles.length > 0) {",
              "        const article = response.articles[0];",
              "        pm.expect(article).to.have.property('id');",
              "        pm.expect(article).to.have.property('title');",
              "        pm.expect(article).to.have.property('content');",
              "        pm.expect(article).to.have.property('category');",
              "        pm.expect(article).to.have.property('status');",
              "        pm.expect(article).to.have.property('createdAt');",
              "    }",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Get News Detail",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{API_BASE_URL}}/news/{{TEST_ARTICLE_ID}}",
          "host": ["{{API_BASE_URL}}"],
          "path": ["news", "{{TEST_ARTICLE_ID}}"]
        },
        "description": "特定記事の詳細取得"
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test('記事詳細が正常に取得される', function () {",
              "    if (pm.variables.get('TEST_ARTICLE_ID')) {",
              "        pm.response.to.have.status(200);",
              "        const response = pm.response.json();",
              "        pm.expect(response).to.be.an('object');",
              "        pm.expect(response.id).to.eql(pm.variables.get('TEST_ARTICLE_ID'));",
              "    } else {",
              "        pm.test.skip('TEST_ARTICLE_IDが設定されていません');",
              "    }",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Get News by Category",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{API_BASE_URL}}/news?category=お知らせ&limit=5",
          "host": ["{{API_BASE_URL}}"],
          "path": ["news"],
          "query": [
            {
              "key": "category",
              "value": "お知らせ",
              "description": "カテゴリフィルタ"
            },
            {
              "key": "limit",
              "value": "5",
              "description": "取得件数制限"
            }
          ]
        },
        "description": "カテゴリ別ニュース取得"
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test('カテゴリ別ニュースが正常に取得される', function () {",
              "    pm.response.to.have.status(200);",
              "    const response = pm.response.json();",
              "    pm.expect(response).to.be.an('object');",
              "    pm.expect(response.articles).to.be.an('array');",
              "    ",
              "    // すべての記事が指定されたカテゴリであることを確認",
              "    if (response.articles && response.articles.length > 0) {",
              "        response.articles.forEach(article => {",
              "            pm.expect(article.category).to.eql('お知らせ');",
              "        });",
              "    }",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Search News",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{API_BASE_URL}}/news?search=テスト&limit=10",
          "host": ["{{API_BASE_URL}}"],
          "path": ["news"],
          "query": [
            {
              "key": "search",
              "value": "テスト",
              "description": "検索キーワード"
            },
            {
              "key": "limit",
              "value": "10",
              "description": "取得件数制限"
            }
          ]
        },
        "description": "ニュース検索"
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test('検索結果が正常に取得される', function () {",
              "    pm.response.to.have.status(200);",
              "    const response = pm.response.json();",
              "    pm.expect(response).to.be.an('object');",
              "    pm.expect(response.articles).to.be.an('array');",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Get News Stats",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{API_BASE_URL}}/news/stats",
          "host": ["{{API_BASE_URL}}"],
          "path": ["news", "stats"]
        },
        "description": "ニュース統計情報の取得"
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test('統計情報が正常に取得される', function () {",
              "    pm.response.to.have.status(200);",
              "    const response = pm.response.json();",
              "    pm.expect(response).to.be.an('object');",
              "    pm.expect(response).to.have.property('total');",
              "    pm.expect(response).to.have.property('published');",
              "    pm.expect(response).to.have.property('draft');",
              "    pm.expect(response).to.have.property('categories');",
              "    pm.expect(response.total).to.be.a('number');",
              "    pm.expect(response.published).to.be.a('number');",
              "    pm.expect(response.draft).to.be.a('number');",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Error Handling - Invalid Article ID",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{API_BASE_URL}}/news/invalid-article-id",
          "host": ["{{API_BASE_URL}}"],
          "path": ["news", "invalid-article-id"]
        },
        "description": "無効な記事IDでのエラーハンドリング確認"
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test('無効な記事IDでエラーが返される', function () {",
              "    pm.response.to.have.status(404);",
              "    const response = pm.response.json();",
              "    pm.expect(response).to.be.an('object');",
              "    pm.expect(response).to.have.property('error');",
              "    pm.expect(response.error).to.include('not found');",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Error Handling - Invalid Parameters",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{API_BASE_URL}}/news?limit=invalid",
          "host": ["{{API_BASE_URL}}"],
          "path": ["news"],
          "query": [
            {
              "key": "limit",
              "value": "invalid",
              "description": "無効なパラメータ"
            }
          ]
        },
        "description": "無効なパラメータでのエラーハンドリング確認"
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test('無効なパラメータでエラーが返される', function () {",
              "    pm.response.to.have.status(400);",
              "    const response = pm.response.json();",
              "    pm.expect(response).to.be.an('object');",
              "    pm.expect(response).to.have.property('error');",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Performance Test - Large Dataset",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{API_BASE_URL}}/news?limit=100",
          "host": ["{{API_BASE_URL}}"],
          "path": ["news"],
          "query": [
            {
              "key": "limit",
              "value": "100",
              "description": "大量データ取得テスト"
            }
          ]
        },
        "description": "大量データ取得時のパフォーマンステスト"
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test('大量データが正常に取得される', function () {",
              "    pm.response.to.have.status(200);",
              "    const response = pm.response.json();",
              "    pm.expect(response).to.be.an('object');",
              "    pm.expect(response.articles).to.be.an('array');",
              "    pm.expect(response.articles.length).to.be.at.most(100);",
              "});",
              "",
              "pm.test('レスポンス時間が10秒以内である', function () {",
              "    pm.expect(pm.response.responseTime).to.be.below(10000);",
              "});"
            ]
          }
        }
      ]
    }
  ]
}
